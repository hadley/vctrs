% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assert.R
\name{vec_assert}
\alias{vec_assert}
\alias{vec_is}
\title{Assert an argument has known prototype and/or size}
\usage{
vec_assert(x, ptype = NULL, size = NULL, arg = as_label(substitute(x)))

vec_is(x, ptype = NULL, size = NULL)
}
\arguments{
\item{x}{A vector argument to check.}

\item{ptype}{Prototype to compare against. If the prototype has a
class, its \code{\link[=vec_ptype]{vec_ptype()}} is compared to that of \code{x} with
\code{identical()}. Otherwise, its \code{\link[=typeof]{typeof()}} is compared to that of
\code{x} with \code{==}.}

\item{size}{Size to compare against}

\item{arg}{Name of argument being checked. This is used in error
messages. The label of the expression passed as \code{x} is taken as
default.}
}
\value{
\code{vec_is()} returns \code{TRUE} or \code{FALSE}. \code{vec_assert()} either
throws a typed error (see section on error types) or returns \code{x},
invisibly.
}
\description{
\itemize{
\item \code{vec_is()} is a predicate that checks if its input is a vector that
conforms to a prototype and/or a size.
\item \code{vec_assert()} throws an error when the input is not a vector or
doesn't conform.
}
}
\section{Scalars and vectors}{


Informally, a vector is a collection that makes sense to use as column
in a data frame.
An object is a vector if one of the following conditions hold:
\itemize{
\item \code{\link[=typeof]{typeof()}} is atomic: \code{"logical"}, \code{"integer"}, \code{"double"},
\code{"complex"}, \code{"character"}, \code{"raw"}
\item the object is a \link{data.frame}
\item \code{typeof()} is \code{"list"}, and one of:
\itemize{
\item the object is a bare \code{"list"} without a \code{"class"} attribute,
see \code{\link[=is_bare_list]{is_bare_list()}}
\item the \code{"class"} attribute contains \code{"list"}, i.e., \code{inherits(x, "list")}
is \code{TRUE}
}
\item the object's class implements a \code{\link[=vec_proxy]{vec_proxy()}} method
}

Otherwise an object is inherently \emph{scalar} and cannot be used as a vector.
In particular,
\itemize{
\item \code{NULL} is not a vector.
\item Objects of mode \link{expression} have vector-like behavior but are currently
treated as scalars.
\item Support for S4 vectors is currently limited to objects that inherit from
an atomic type.
}
}

\section{Error types}{


\code{vec_is()} never throws.
\code{vec_assert()} throws the following errors:
\itemize{
\item If the input is not a vector, an error of class
\code{"vctrs_error_scalar_type"} is raised.
\item If the prototype doesn't match, an error of class
\code{"vctrs_error_assert_ptype"} is raised.
\item If the size doesn't match, an error of class
\code{"vctrs_error_assert_size"} is raised.
}

Both errors inherit from \code{"vctrs_error_assert"}.
}

