% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runs.R
\name{vec_identify_runs}
\alias{vec_identify_runs}
\alias{vec_locate_runs}
\alias{vec_detect_runs}
\title{Runs}
\usage{
vec_identify_runs(x)

vec_locate_runs(x, start = TRUE)

vec_detect_runs(x, start = TRUE)
}
\arguments{
\item{x}{A vector.}

\item{start}{A single logical specifying whether the start or end of each
run should be detected.}
}
\value{
\itemize{
\item \code{vec_identify_runs()}: An integer vector with the same size as \code{x}. A
scalar integer attribute, \code{n}, is attached.
\item \code{vec_locate_runs()}: An integer vector with a size equal to the number
of runs in \code{x}.
\item \code{vec_detect_runs()}: A logical vector with the same size as \code{x}.
}
}
\description{
\itemize{
\item \code{vec_identify_runs()} returns a vector of identifiers for the elements of
\code{x} that indicate which run of repeated values they fall in. The number of
runs is also returned as an attribute, \code{n}.
\item \code{vec_locate_runs()} returns a vector of locations corresponding to either
the starting or ending location of each run, depending on the value of
\code{start}.
\item \code{vec_detect_runs()} returns a logical vector that detects either the
starting or ending location of each run, depending on the value of
\code{start}.
}
}
\details{
Unlike \code{\link[base:rle]{base::rle()}}, adjacent missing values are considered identical when
constructing runs. For example, \code{vec_identify_runs(c(NA, NA))} will return
\code{c(1, 1)}, not \code{c(1, 2)}.
}
\examples{
x <- c("a", "z", "z", "c", "a", "a")

vec_identify_runs(x)

# Starting location of each run
vec_locate_runs(x)
vec_detect_runs(x)

# Ending location of each run
vec_locate_runs(x, start = FALSE)
vec_detect_runs(x, start = FALSE)

y <- c(1, 1, 1, 2, 2, 3)

# With multiple columns, the runs are constructed rowwise
df <- data_frame(
  x = x,
  y = y
)

vec_identify_runs(df)
}
